server {
    listen 443 ssl http2;
    server_name hedge.example.com;

    # TLS — replace with your cert paths
    ssl_certificate     /etc/letsencrypt/live/hedge.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hedge.example.com/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # Basic Auth — create with: htpasswd -c /etc/nginx/.htpasswd hedge
    auth_basic           "Restricted";
    auth_basic_user_file /etc/nginx/.htpasswd;

    # Security headers
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy no-referrer-when-downgrade always;
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' data: https:; connect-src 'self' https: wss:; img-src 'self' data: https:;" always;

    # Proxy to Streamlit (SSE friendly)
    location / {
        proxy_pass http://127.0.0.1:8501/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }

    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
}

# HTTP -> HTTPS redirect
server {
    listen 80;
    server_name hedge.example.com;
    return 301 https://$host$request_uri;
}

